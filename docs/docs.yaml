openapi: 3.1.0
info:
  title: Open CRM API
  description: 'API for managing users, authentication, and organizations in the Open CRM system'
  version: 1.0.0
servers:
  - url: 'http://localhost:8787/v1'
security:
  - bearerAuth: []
tags:
  - name: Authentication
    description: Endpoints for authentication purposes
paths:
  /auth/sign-in:
    post:
      tags:
        - Authentication
      summary: Log in a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  minLength: 6
                  example: secret123
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/APIResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          user:
                            type: object
                            properties:
                              id:
                                type: string
                                format: uuid
                              organization_id:
                                type: string
                                format: uuid
                                nullable: true
                              name:
                                type: string
                              email:
                                type: string
                                format: email
                              email_verified:
                                type: boolean
                              roles:
                                type: string
                                example: 'user,superadmin,owner,admin'
                              image:
                                type: string
                                nullable: true
                              is_active:
                                type: boolean
                              created_at:
                                type: string
                                format: date-time
                              updated_at:
                                type: string
                                format: date-time
                            required:
                              - id
                              - name
                              - email
                              - roles
                              - is_active
                              - created_at
                              - updated_at
                          session:
                            type: object
                            properties:
                              id:
                                type: string
                                format: uuid
                              user_id:
                                type: string
                                format: uuid
                              access_token:
                                type: string
                                nullable: true
                              refresh_token:
                                type: string
                              access_token_expires_at:
                                type: string
                                format: date-time
                              refresh_token_expires_at:
                                type: string
                                format: date-time
                              user_agent:
                                type: string
                                nullable: true
                              ip_address:
                                type: string
                                nullable: true
        '401':
          $ref: '#/components/responses/Unauthorized'
  /auth/sign-up:
    post:
      tags:
        - Authentication
      summary: Sing up
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
              properties:
                name:
                  type: string
                  minLength: 6
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  minLength: 6
                  example: secret123
      responses:
        '200':
          description: Sign-up successful
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/APIResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/paths/~1auth~1sign-in/post/responses/200/content/application~1json/schema/allOf/1/properties/data'
        '500':
          $ref: '#/components/responses/BadRequest'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    APIResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        status:
          type: integer
          example: 200
        message:
          type: string
          nullable: true
          example: Operation successful
        data:
          nullable: true
          description: Returned payload (can be of any type)
        meta:
          nullable: true
          description: 'Additional information, such as pagination or count'
    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        status:
          type: integer
          example: 401
        message:
          type: string
          example: Unauthorized
        meta:
          nullable: true
          description: Additional information or error context
  responses:
    Unauthorized:
      description: Unauthorized access
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    BadRequest:
      description: Bad request due to invalid input
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Ok:
      description: Successful operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIResponse'
