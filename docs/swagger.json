{
  "openapi": "3.0.3",
  "info": {
    "title": "Open CRM API",
    "description": "API for managing users, authentication, and organizations in the Open CRM system",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/v1",
      "description": "Main API server"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication-related endpoints"
    },
    {
      "name": "Users",
      "description": "User management endpoints"
    },
    {
      "name": "Organizations",
      "description": "Organization management endpoints"
    }
  ],
  "paths": {
    "/auth/get-session": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get current session",
        "description": "Retrieves the current user session.",
        "operationId": "getSession",
        "responses": {
          "200": {
            "description": "Session retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/sign-in": {
      "post": {
        "tags": ["Auth"],
        "summary": "Sign in a user",
        "description": "Authenticates a user and returns a session.",
        "operationId": "signIn",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 6
                  }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User signed in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/sign-up": {
      "post": {
        "tags": ["Auth"],
        "summary": "Sign up a new user",
        "description": "Registers a new user with the provided details.",
        "operationId": "signUp",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User signed up successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/sign-out": {
      "post": {
        "tags": ["Auth"],
        "summary": "Sign out a user",
        "description": "Terminates the user's session.",
        "operationId": "signOut",
        "responses": {
          "200": {
            "description": "User signed out successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": ["Users"],
        "summary": "Create a new user",
        "description": "Creates a new user with the provided details. Requires superadmin or admin role.",
        "operationId": "createUser",
        "security": [
          {
            "BearerAuth": ["superadmin", "admin"]
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Users"],
        "summary": "Get all users",
        "description": "Retrieves a list of all users. Requires superadmin or admin role.",
        "operationId": "getAllUsers",
        "security": [
          {
            "BearerAuth": ["superadmin", "admin"]
          }
        ],
        "responses": {
          "200": {
            "description": "List of users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get user by ID",
        "description": "Retrieves a user by their ID. Requires superadmin or admin role.",
        "operationId": "getUserById",
        "security": [
          {
            "BearerAuth": ["superadmin", "admin"]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "UUID of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Users"],
        "summary": "Update a user",
        "description": "Updates user details by ID. Requires superadmin, admin, or user role.",
        "operationId": "updateUser",
        "security": [
          {
            "BearerAuth": ["superadmin", "admin", "user"]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "UUID of the user"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body or ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Delete a user",
        "description": "Deletes a user by ID. Requires superadmin or admin role.",
        "operationId": "deleteUser",
        "security": [
          {
            "BearerAuth": ["superadmin", "admin"]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "UUID of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID or error deleting user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/orgs": {
      "post": {
        "tags": ["Organizations"],
        "summary": "Create a new organization",
        "description": "Creates a new organization with the provided details. Requires superadmin or admin role.",
        "operationId": "createOrganization",
        "security": [
          {
            "BearerAuth": ["superadmin", "admin"]
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrganizationDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Organization created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/orgs/{id}": {
      "get": {
        "tags": ["Organizations"],
        "summary": "Get organization by ID",
        "description": "Retrieves an organization by its ID. Requires superadmin, admin, user, or owner role.",
        "operationId": "getOrganizationById",
        "security": [
          {
            "BearerAuth": ["superadmin", "admin", "user", "owner"]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "UUID of the organization"
          }
        ],
        "responses": {
          "200": {
            "description": "Organization retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Organization not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/orgs": {
      "get": {
        "tags": ["Organizations"],
        "summary": "Get organization by user ID",
        "description": "Retrieves the organization associated with a user ID. Requires superadmin, admin, or user role.",
        "operationId": "getOrgByUserId",
        "security": [
          {
            "BearerAuth": ["superadmin", "admin", "user"]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "UUID of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "Organization retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/orgs/{id}/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Get users by organization ID",
        "description": "Retrieves the list of users associated with an organization ID. Requires superadmin, admin, or user role.",
        "operationId": "getUsersByOrgId",
        "security": [
          {
            "BearerAuth": ["superadmin", "admin", "user"]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "UUID of the organization"
          }
        ],
        "responses": {
          "200": {
            "description": "Users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateUserDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "minLength": 6
          },
          "roles": {
            "type": "string",
            "default": "user"
          }
        },
        "required": ["name", "email", "password"]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "email_verified": {
            "type": "boolean",
            "default": false
          },
          "roles": {
            "type": "string",
            "default": "user"
          },
          "image": {
            "type": "string",
            "nullable": true
          },
          "is_active": {
            "type": "boolean",
            "default": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "roles",
          "is_active",
          "created_at",
          "updated_at"
        ]
      },
      "UserResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "email_verified": {
            "type": "boolean",
            "default": false
          },
          "roles": {
            "type": "string"
          },
          "image": {
            "type": "string",
            "nullable": true
          },
          "is_active": {
            "type": "boolean",
            "default": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "roles",
          "is_active",
          "created_at",
          "updated_at"
        ]
      },
      "CreateOrganizationDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "domain": {
            "type": "string",
            "nullable": true
          }
        },
        "required": ["name"]
      },
      "Organization": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "domain": {
            "type": "string",
            "nullable": true
          },
          "is_active": {
            "type": "boolean",
            "default": false
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "required": ["id", "name", "is_active"]
      },
      "OrganizationResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "domain": {
            "type": "string",
            "nullable": true
          },
          "is_active": {
            "type": "boolean",
            "default": false
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": ["id", "name", "is_active", "created_at", "updated_at"]
      },
      "APIResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "$ref": "#/components/schemas/UserResponseDTO"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UserResponseDTO"
                }
              },
              {
                "$ref": "#/components/schemas/Organization"
              },
              {
                "$ref": "#/components/schemas/OrganizationResponseDTO"
              },
              {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            ]
          }
        },
        "required": ["status"]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "required": ["status", "message"]
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ]
}
